version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: my_docker_postgres
    restart: no
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./my_db.sql:/docker-entrypoint-initdb.d/my_db.sql
    networks:
      - my_docker_network

  redis:
    image: redis:7
    container_name: my_docker_redis
    restart: no
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - my_docker_network
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: my_docker_elasticsearch
    restart: no
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ES_PASSWORD}
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ports:
      - "${ES_PORT}:9200"
    networks:
      - my_docker_network
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -u elastic:${ES_PASSWORD} -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s


networks:
  my_docker_network:
